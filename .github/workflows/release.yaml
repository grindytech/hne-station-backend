name: hne-station-service release
on:
  push:
    tags: ['*']

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      RELEASE_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/dev:hne-station-${{github.ref_name}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{env.DOCKERHUB_USERNAME}}
          password: ${{env.DOCKERHUB_ACCESS_TOKEN}}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Cache Docker Image Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{env.RELEASE_IMAGE}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: release
    env:
      RELEASE_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/dev:hne-station-${{github.ref_name}}
      KUBE_NAMESPACE: he-station
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_REGION: ap-southeast-1
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      TELEGRAM_TO: ${{secrets.TELEGRAM_TO}}
      TELEGRAM_TOKEN: ${{secrets.TELEGRAM_TOKEN}}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy to Kubernetes cluster
        uses: kodermax/kubectl-aws-eks@master
        with:
          args: set image deployment/station station=${{ env.RELEASE_IMAGE }} --record -n ${{env.KUBE_NAMESPACE}}

      - name: Verify Kubernetes deployment
        uses: kodermax/kubectl-aws-eks@master
        with:
          args: rollout status deploy station -n ${{env.KUBE_NAMESPACE}}

      - name: send telegram message on deploy
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ env.TELEGRAM_TOKEN }}
          message: |
            [EKS]
            ${{ github.actor }} release ${{github.ref_name}} - deploy successfully
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
